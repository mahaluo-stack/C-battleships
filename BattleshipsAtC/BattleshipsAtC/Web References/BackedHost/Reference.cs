//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace BattleshipsAtC.BackedHost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DataServiceSoap", Namespace="http://tempuri.org/")]
    public partial class DataService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddNewPlayerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllPlayersOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddNewTeamOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllTeamsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePlayerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DataService() {
            this.Url = global::BattleshipsAtC.Properties.Settings.Default.BattleshipsAtC_BackedHost_DataService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddNewPlayerCompletedEventHandler AddNewPlayerCompleted;
        
        /// <remarks/>
        public event GetAllPlayersCompletedEventHandler GetAllPlayersCompleted;
        
        /// <remarks/>
        public event AddNewTeamCompletedEventHandler AddNewTeamCompleted;
        
        /// <remarks/>
        public event GetAllTeamsCompletedEventHandler GetAllTeamsCompleted;
        
        /// <remarks/>
        public event UpdatePlayerCompletedEventHandler UpdatePlayerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewPlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewPlayer(string playerName, string playerTeam) {
            object[] results = this.Invoke("AddNewPlayer", new object[] {
                        playerName,
                        playerTeam});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewPlayerAsync(string playerName, string playerTeam) {
            this.AddNewPlayerAsync(playerName, playerTeam, null);
        }
        
        /// <remarks/>
        public void AddNewPlayerAsync(string playerName, string playerTeam, object userState) {
            if ((this.AddNewPlayerOperationCompleted == null)) {
                this.AddNewPlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewPlayerOperationCompleted);
            }
            this.InvokeAsync("AddNewPlayer", new object[] {
                        playerName,
                        playerTeam}, this.AddNewPlayerOperationCompleted, userState);
        }
        
        private void OnAddNewPlayerOperationCompleted(object arg) {
            if ((this.AddNewPlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewPlayerCompleted(this, new AddNewPlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllPlayers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllPlayers() {
            object[] results = this.Invoke("GetAllPlayers", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllPlayersAsync() {
            this.GetAllPlayersAsync(null);
        }
        
        /// <remarks/>
        public void GetAllPlayersAsync(object userState) {
            if ((this.GetAllPlayersOperationCompleted == null)) {
                this.GetAllPlayersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllPlayersOperationCompleted);
            }
            this.InvokeAsync("GetAllPlayers", new object[0], this.GetAllPlayersOperationCompleted, userState);
        }
        
        private void OnGetAllPlayersOperationCompleted(object arg) {
            if ((this.GetAllPlayersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllPlayersCompleted(this, new GetAllPlayersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddNewTeam", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddNewTeam(string teamName, string leader, string occupation, string vessel, string vesselName) {
            object[] results = this.Invoke("AddNewTeam", new object[] {
                        teamName,
                        leader,
                        occupation,
                        vessel,
                        vesselName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddNewTeamAsync(string teamName, string leader, string occupation, string vessel, string vesselName) {
            this.AddNewTeamAsync(teamName, leader, occupation, vessel, vesselName, null);
        }
        
        /// <remarks/>
        public void AddNewTeamAsync(string teamName, string leader, string occupation, string vessel, string vesselName, object userState) {
            if ((this.AddNewTeamOperationCompleted == null)) {
                this.AddNewTeamOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddNewTeamOperationCompleted);
            }
            this.InvokeAsync("AddNewTeam", new object[] {
                        teamName,
                        leader,
                        occupation,
                        vessel,
                        vesselName}, this.AddNewTeamOperationCompleted, userState);
        }
        
        private void OnAddNewTeamOperationCompleted(object arg) {
            if ((this.AddNewTeamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddNewTeamCompleted(this, new AddNewTeamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllTeams", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllTeams() {
            object[] results = this.Invoke("GetAllTeams", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllTeamsAsync() {
            this.GetAllTeamsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllTeamsAsync(object userState) {
            if ((this.GetAllTeamsOperationCompleted == null)) {
                this.GetAllTeamsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllTeamsOperationCompleted);
            }
            this.InvokeAsync("GetAllTeams", new object[0], this.GetAllTeamsOperationCompleted, userState);
        }
        
        private void OnGetAllTeamsOperationCompleted(object arg) {
            if ((this.GetAllTeamsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllTeamsCompleted(this, new GetAllTeamsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePlayer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePlayer(string currentPlayerName, string newPlayerName, string newPlayerTeam) {
            object[] results = this.Invoke("UpdatePlayer", new object[] {
                        currentPlayerName,
                        newPlayerName,
                        newPlayerTeam});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePlayerAsync(string currentPlayerName, string newPlayerName, string newPlayerTeam) {
            this.UpdatePlayerAsync(currentPlayerName, newPlayerName, newPlayerTeam, null);
        }
        
        /// <remarks/>
        public void UpdatePlayerAsync(string currentPlayerName, string newPlayerName, string newPlayerTeam, object userState) {
            if ((this.UpdatePlayerOperationCompleted == null)) {
                this.UpdatePlayerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePlayerOperationCompleted);
            }
            this.InvokeAsync("UpdatePlayer", new object[] {
                        currentPlayerName,
                        newPlayerName,
                        newPlayerTeam}, this.UpdatePlayerOperationCompleted, userState);
        }
        
        private void OnUpdatePlayerOperationCompleted(object arg) {
            if ((this.UpdatePlayerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePlayerCompleted(this, new UpdatePlayerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddNewPlayerCompletedEventHandler(object sender, AddNewPlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewPlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewPlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllPlayersCompletedEventHandler(object sender, GetAllPlayersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllPlayersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllPlayersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void AddNewTeamCompletedEventHandler(object sender, AddNewTeamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddNewTeamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddNewTeamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void GetAllTeamsCompletedEventHandler(object sender, GetAllTeamsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void UpdatePlayerCompletedEventHandler(object sender, UpdatePlayerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591